1) Q What happens when you initialize a repository? Why do you need to do it?
A Git recognisez the files in the respository.

2) Q How is the staging area different from the working directory and the repository? What value do you think it offers?
A The working directory is where you change/experiment with code, when ready you add it to the staging so you know this file is ready to be committed to the repository, which is the basicly the live enviroment/code if you ask me.

3) Q How can you use the staging area to make sure you have one commit per logical change?
A You can use the command git diff --staged to checkout the differences between the files in your staging area and the most recent commit in your git repository to make sure you only commit ONE logical change.

4) Q What are some situations when branches would be helpful in keeping your history organized? How would branches help?
A When you try experimental features which you don't know yet if it's going to work. Or an italian version. Master is good for fixbug, adding new feature, update docs.

From interview: I usually create a new branch when I'm moving on to a different piece of work, anytime I'm doing something different I will create new branch. I like to think of it as context switching. Whenever I'm switching to work on a new feature  or whether I'm going to correct a bug I'll create a new branch at that time. Git branches help you keep a project organized perticalirally when you sharing that project publically You have your master branche and that would be your production quality branch that never breaks always works. And you can have your development branch where active work is taking place on your project. Then a lot of times you have things like an experimental branche or maybe some unique feature branches those are thing you're working on and fully expect to break and wnat share with the public but with understanding this isn't production queality work just yet.   Branches are also good when not only collabirating publicly but they are really good to coll. with yourself so lot of times when I'm working on a feature and I come across a bug, branches allow me the ability to context switch to get away from the work I'm doing on the feature go back to where I need to be to fix the bug and then compartmentalize the work. Branches are really good even when i'm getting bored working on a feature it gives you the ability to switch and get working on something different.

5) Q How do the diagrams help you visualize the branch structure?
A That's where diagrams are for isn't it? It helps you visualize wich commits you will see when using git log on that branch.